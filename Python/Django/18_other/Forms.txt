/********* steps ***********/

create the form
use the form in the view
create the html that uses the form
configure csrf token
forms in action
collecting form data in the view

/********* forms.py ***********/

from django import forms
from django.core import validators

class UserRegistrationForm(forms.Form):
    GENDER = [('male','MALE'),('female','FEMALE')]
    firstName : forms.CharField(validators=[validators.MinLengthValidator(5),validators.MaxLengthValidator(20)])
    lastName  : forms.CharField()
    middlename : forms.CharField(required=False)
    email     : forms.CharField()
    address   : forms.CharField(widget=forms.Textarea)
    gender    : forms.CharField(widget=forms.Select(choices=GENDER))
    password  : forms.CharField(widget=forms.PasswordInput)
    ssn       : forms.IntegerField()

    # single clean
    def clean(self):
        user_cleaned_data = super().clean()
        inputFirstName = user_cleaned_data['firstName']
        if len(inputFirstName)>20:
            raise forms.ValidationError('Max length of first name is 20 charecters')

    # individual clean
    def clean_firstName(self):
        inputFirstName = self.cleaned_data['firstName']
        if len(inputFirstName) > 20:
            raise forms.ValidationError('Max length of first name is 20 charecters')
        return inputFirstName


/********* views.py ***********/

from django.shortcuts import render
from . import forms

def userRegistrationView(request):
    form = forms.UserRegistrationForm()
    if request.method=='POST':
        form=form.UserRegistrationForm(request.POST)
        if form.is_valid():
        print(form.cleaned_data['firstName'])
    return render(request,'registration.html',{'form':form})

/********* registration.html ***********/

<form method="post">
{{form.as_p}}
{% csrf_token %}
<input type="submit" name="" value="Submit">
</form>

..................

form.as_p
form.as_table
form.as_ul


